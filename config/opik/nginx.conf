user nginx;
worker_processes auto;
error_log /dev/stderr notice;
pid /tmp/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /dev/stdout main;

    sendfile on;
    tcp_nopush on;
    keepalive_timeout 65;
    gzip on;

    # Use /tmp for all temp paths (writable in rootless podman)
    client_body_temp_path /tmp/nginx_client_body;
    proxy_temp_path /tmp/nginx_proxy;
    fastcgi_temp_path /tmp/nginx_fastcgi;
    scgi_temp_path /tmp/nginx_scgi;
    uwsgi_temp_path /tmp/nginx_uwsgi;

    client_header_buffer_size 16k;
    large_client_header_buffers 4 64k;

    # DNS resolver for dynamic backend hostname resolution
    # Uses podman's internal DNS (aardvark-dns) for container name resolution
    resolver 10.89.0.1 valid=10s;
    resolver_timeout 5s;

    server {
        listen 5173;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;

        access_log /dev/stdout main;
        error_log /dev/stderr notice;

        location /api/ {
            rewrite /api/(.*) /$1  break;
            # Use variable to force runtime DNS resolution instead of startup caching
            set $backend "backend:8080";
            proxy_pass http://$backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_read_timeout 90;
            proxy_connect_timeout 90;
            proxy_send_timeout 90;

            proxy_http_version 1.1;
            client_max_body_size 500M;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        location / {
            try_files $uri $uri/ /index.html;
        }
    }
}
